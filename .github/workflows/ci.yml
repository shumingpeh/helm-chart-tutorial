# This GitHub action describes the continuous integration workflow for pull requests to master.

name: ci

on:
  pull_request:
    branches:
      - dev
      - main
  push:
    branches:
      - dev
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out the repository
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # exit-zero treats all errors as warnings. The GitHub editor is 88 chars wide
          flake8 . --count --statistics
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checking out the repository
  #       uses: actions/checkout@v2
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.8
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #     - name: Test with pytest
  #       run: |
  #         pip install pytest
  #         pip install pytest-cov
  #         python -m pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=app --cov-report=xml --cov-report=html --cov-fail-under=100
  #     - name: Upload pytest test results
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: pytest-results
  #         path: junit/test-results.xml
  #       # Use always() to always run this step to publish test results when there are test failures
  #       if: ${{ always() }}
  #     - name: Upload Coverage
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: coverage
  #         path: htmlcov
  #       # Use always() to always run this step to publish test results when there are test failures
  #       if: ${{ always() }}
  #     - name: Coverage Report
  #       uses: 5monkeys/cobertura-action@master
  #       with:
  #         path: coverage.xml
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #         skip_covered: false
  #         show_line: true
  #         minimum_coverage: 100
